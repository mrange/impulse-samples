// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_fcol "v"
# define VAR_state "a"
#endif

#else // if SHADER_MINIFIER_IMPL

// C:\code\github\impulse-samples\source\FourK\minesweeper\shader.frag
"#version 430\n"
 "layout(location=0) out vec4 v;"
 "layout(location=0) uniform vec4[12*12+2] a;"
 "const float y=.9/(12*.5);"
 "const vec4 m=vec4(1,2./3.,1./3.,3);"
 "vec3 s(vec3 v)"
 "{"
   "return v.z*mix(m.xxx,clamp(abs(fract(v.xxx+m.xyz)*6.-m.www)-m.xxx,0.,1.),v.y);"
 "}"
 "float s(vec2 v,vec2 y)"
 "{"
   "vec2 m=abs(v)-y;"
   "return length(max(m,0.))+min(max(m.x,m.y),0.);"
 "}"
 "float t(vec2 v,vec2 m)"
 "{"
   "v.x=abs(v.x);"
   "float y=.5*max(m.x-m.y,0.);"
   "return v.x<y?"
     "abs(v.y)-m.y:"
     "length(v-vec2(y,0))-m.y;"
 "}"
 "vec3 s(vec3 v,vec2 m,vec3 y,vec3 x,float f,float l)"
 "{"
   "const vec2 a=vec2(.75,.075);"
   "vec2 i=abs(m);"
   "if(i.x>.5+a.y+.1||i.y>1.+a.y+.1)"
     "return v;"
   "vec2 s=m;"
   "s.y-=.5;"
   "s.y=s.y-.5;"
   "float n=round(s.y);"
   "s.y-=n;"
   "float r=t(s,a);"
   "vec2 c=m,d=sign(c);"
   "c=abs(c);"
   "c-=.5;"
   "c=c.yx;"
   "float o=t(c,a);"
   "vec2 u=m;"
   "u.y=abs(m.y);"
   "u.y-=.5;"
   "u=abs(u);"
   "float C=dot(normalize(vec2(1,-1)),u),z=r;"
   "z=min(z,o);"
   "return mix(v,(int[16](125,80,79,87,114,55,63,81,127,119,123,62,45,94,47,43)[int(mod(floor(l),16.))]&1<<int(C>0.?"
     ".5*(d.x+1.)+(d.y+1.)+3.:"
     "-n))==0?"
     "x:"
     "y,smoothstep(f,-f,z));"
 "}"
 "vec2 t(inout vec2 v)"
 "{"
   "vec2 m=vec2(.075,.1),y=floor((v+m*.5)/m);"
   "v=mod(v+m*.5,m)-m*.5;"
   "return y;"
 "}"
 "void main()"
 "{"
   "float m=a[0].x;"
   "vec2 u=a[0].yz,c=(-u+2.*gl_FragCoord.xy)/u.yy,f=(-u+2.*a[1].xy)/u.yy;"
   "f.y=-f.y;"
   "float n=sqrt(2.)/u.y;"
   "vec3 x=vec3(0);"
   "vec2 z=c;"
   "const float r=y;"
   "float i=n/r;"
   "z/=r;"
   "z-=.5;"
   "vec2 d=round(z);"
   "z-=d;"
   "d+=12*.5;"
   "vec2 l=c;"
   "l.x-=-.0375;"
   "l.y-=-.95;"
   "vec2 o=t(l);"
   "l/=.04;"
   "float C=n/.04;"
   "int F=clamp(int(d.x+d.y*12+2),2,a.length()-1);"
   "vec4 I=a[F];"
   "float g=I.x,G=I.z,E=s(c,vec2(.9));"
   "if(E<0.)"
     "{"
       "x+=s(vec3(.55,.5,.002))*(1./max(dot(z,z)+.1*abs(G-m),.001));"
       "float w=s(z,vec2(.4))-.05;"
       "w=abs(w)-.0125;"
       "vec2 B=z/.25;"
       "float A=n/.25;"
       "if(g<0.)"
         "{"
           "vec3 D=s(vec3(.3+.3*g/9,.5,1));"
           "x=s(x,B,D,D*.1,A,-g);"
         "}"
       "x=mix(x,vec3(1),smoothstep(i,-i,w));"
     "}"
   "if(o.y==0&&abs(o.x-.5)<5.)"
     "{"
       "vec3 D=s(vec3(.95,.9,1));"
       "x=s(x,l,D,D*.1,C,mod(m*pow(10,o.x),10.));"
     "}"
   "x+=s(vec3(.4,.5,.002))/max(length(c-f),.001);"
   "x=sqrt(x);"
   "v=vec4(x,1);"
 "}",

#endif

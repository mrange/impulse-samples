// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_fcol "v"
# define VAR_state "s"
#endif

#else // if SHADER_MINIFIER_IMPL

// D:\code\github\impulse-samples\source\FourK\minesweeper\shader.frag
"#version 430\n"
 "const float y=1./8;"
 "out vec4 v;"
 "uniform vec4[12*12+2] s;"
 "const float a=.825/6,f=acos(-1),m=2*f,x=.825/6,z=a,l[12]=float[](5,12,0,17,14,19,16,14,15,18,19,19);"
 "vec2 d=vec2(.75,.075),r[7]=vec2[](vec2(0),vec2(.5,0),vec2(4,2),vec2(10,1),vec2(10,2),vec2(4,1),vec2(10,1));"
 "int i[20]=int[](125,80,79,87,114,55,63,81,127,119,123,62,45,94,47,43,44,251,41,0);"
 "vec3 t(float y)"
 "{"
   "return 1+sin(vec3(-4,3,1)/2+y);"
 "}"
 "vec2 t(inout vec2 v,vec2 y)"
 "{"
   "vec2 f=floor((v+y/2)/y);"
   "v=mod(v+y/2,y)-y/2;"
   "return f;"
 "}"
 "float n(vec2 v)"
 "{"
   "v*=v;"
   "v*=v;"
   "return pow(dot(v,v),1./8)-.45;"
 "}"
 "vec3 n(vec2 v,float y)"
 "{"
   "vec2 f=v*v;"
   "f*=f;"
   "float s=y*y;"
   "s*=s;"
   "s*=s;"
   "float d=s-dot(f,f);"
   "if(d<0)"
     "return vec3(0,0,1);"
   "vec3 a=vec3(v,pow(d,1./8)),m=a*a,x=m*m;"
   "x*=m*a;"
   "return normalize(x);"
 "}"
 "float p(vec2 v,vec2 y)"
 "{"
   "v.x=abs(v.x);"
   "float f=max(y.x-y.y,0)/2;"
   "return(v.x<f?"
     "abs(v.y):"
     "length(v-vec2(f,0)))-y.y;"
 "}"
 "vec3 n(vec2 v,vec3 y,vec3 f,float a,float x)"
 "{"
   "vec2 m=abs(v),r=v,s=v,l=sign(s),z=v;"
   "if(m.x>.6+d.y||m.y>1.1+d.y)"
     "return vec3(0);"
   "r.y-=1;"
   "float n=round(r.y);"
   "r.y-=n;"
   "s=abs(s.yx)-.5;"
   "z.y=abs(v.y)-.5;"
   "z=abs(z);"
   "vec3 t=(i[int(floor(x))]&1<<int(dot(vec2(1,-1)/sqrt(2),z)>0?"
     "3+(l.x+1)/2+l.y+1:"
     "-n))==0?"
     "f:"
     "y;"
   "return t*smoothstep(a,-a,min(p(r,d),p(s,d)));"
 "}"
 "void main()"
 "{"
   "vec2 f=s[0].yz,a=(-f+2*gl_FragCoord.xy)/f.yy,d=(-f+2*s[1].xy)/f.yy,m=a,i=a,p=a;"
   "float C=s[0].x/2,F=s[0].w,e=sqrt(2)/f.y,w=e/z,I=e/.05,H=e/(.25*z),g=sign(p.y);"
   "vec3 c=vec3(0),D=vec3(a,0),B=vec3(0,0,C),A=normalize(vec3(a,2)),E=normalize(D-vec3(0,0,10)),G=normalize(vec3(d,1)-D),J=normalize(vec3(2,3,3)),K=sqrt(t(C));"
   "for(int o=1;o<10;++o)"
     "{"
       "float L=(-B.x+6*sqrt(o))/abs(A).x;"
       "vec3 M=B+A*L;"
       "vec2 N=M.yz*.02,O=round(N),P=N-O;"
       "if(fract(sin(dot((O+o+.5*sign(A.x)).xy,vec2(12.9898,58.233)))*13758.5453)<.5)"
         "P=vec2(P.y,-P.x);"
       "float Q=smoothstep(-.7,1.,sin(.1*M.z+C+o+sign(A.x))),R=abs(min(length(P+.5)-.5,length(P-.5)-.5))-.025;"
       "c+=t(.05*L+C)*exp(-.003*L*L)*.0025/max(abs(R),.003*Q)*Q;"
     "}"
   "i=i/z-.5;"
   "p.x-=-x*.75/2+a.y/5;"
   "p.y=abs(p.y)-.9;"
   "vec2 P=t(p,vec2(.75*x,x)),o=round(i);"
   "p.y*=g;"
   "i-=o;"
   "o+=6;"
   "p/=.05;"
   "float N=o.x+o.y*12+2,L=length(d-a);"
   "if(P.y==0&&abs(P.x-.5)<6)"
     "{"
       "vec3 M=t(2.5+1.5*g+.4*p.y+(P.x<1?"
         "0:"
         "3));"
       "c+=n(p,M,M*.075,I,P.x>0?"
         "mod((g<0?"
           "s[1].w:"
           "s[1].z)*pow(10,P.x-6),10):"
         "l[int(P.x+5+3*(1-g))]);"
     "}"
   "if(max(abs(m).x,abs(m).y)<.825)"
     "{"
       "vec4 M=s[int(N)];"
       "float O=M.z,R=M.w,Q=n(i),S=smoothstep(R+1./2,R+1./8,F),T=smoothstep(O,O+y,F),U=exp(-2*fract(F-L*L/8));"
       "vec3 V=n(i,.45-1./80-S/40),u=tanh(8*c)/8;"
       "float W=1+dot(V,E),X=pow(max(dot(J,reflect(E,V)),0),22),Y=pow(max(dot(G,reflect(E,V)),0),44);"
       "for(int Z=0;Z<2;++Z)"
         "{"
           "float _=Z==0?"
             "M.y:"
             "M.x,b=Z==0?"
             "1-T:"
             "T;"
           "vec2 h=r[int(_)];"
           "float j=abs(length(i)-.1*max(S,U));"
           "for(float k=0;k<h.y;++k)"
             "j=min(abs(j-.1),j);"
           "vec3 k=(.2+t(2-_))*(h.x*.005/max(j,.003));"
           "if(_<1)"
             "{"
               "vec2 q=i/.25;"
               "q.x+=-q.y/8;"
               "vec3 at=t(_/2-q.y/2),ab=at/20;"
               "if(_<0)"
                 "u+=n(q,at,ab,H,-_);"
             "}"
           "else"
             " u=mix(u,k,b*smoothstep(w,-w,Q));"
           "u+=b*(X/4+Y*K)*W*16*step(1,_);"
         "}"
       "c=mix(c,u,smoothstep(w,-w,Q));"
       "c=mix(c,mix(t(3.+a.y)/4,vec3(1),S),smoothstep(w,-w,abs(Q)-1./80));"
     "}"
   "v=vec4(sqrt(tanh(c)),1);"
 "}",

#endif

// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_fcol "v"
# define VAR_state "s"
#endif

#else // if SHADER_MINIFIER_IMPL

// D:\code\github\impulse-samples\source\FourK\minesweeper\shader.frag
"#version 430\n"
 "const float y=1./8;"
 "out vec4 v;"
 "uniform vec4[146] s;"
 "const float a=.825/6,f=acos(-1),m=2*f,x=.825/6,w=a,r[12]=float[](5,12,0,17,14,19,16,14,15,18,19,19);"
 "vec2 d=vec2(.75,.075),n[7]=vec2[](vec2(0),vec2(.5,0),vec2(4,2),vec2(10,1),vec2(10,2),vec2(4,1),vec2(10,1));"
 "int i[20]=int[](125,80,79,87,114,55,63,81,127,119,123,62,45,94,47,43,44,251,41,0);"
 "vec3 t(float y)"
 "{"
   "return 1+sin(vec3(-4,3,1)/2+y);"
 "}"
 "vec2 t(inout vec2 v,vec2 y)"
 "{"
   "vec2 x=floor((v+y/2)/y);"
   "v=mod(v+y/2,y)-y/2;"
   "return x;"
 "}"
 "float p(vec2 v)"
 "{"
   "v*=v;"
   "v*=v;"
   "return pow(dot(v,v),1./8)-.45;"
 "}"
 "vec3 p(vec2 v,float s)"
 "{"
   "vec2 y=v*v;"
   "y*=y;"
   "float f=s*s;"
   "f*=f;"
   "f*=f;"
   "float x=f-dot(y,y);"
   "if(x<0)"
     "return vec3(0,0,1);"
   "vec3 a=vec3(v,pow(x,1./8)),m=a*a,i=m*m;"
   "i*=m*a;"
   "return normalize(i);"
 "}"
 "float e(vec2 v,vec2 y)"
 "{"
   "v.x=abs(v.x);"
   "float x=max(y.x-y.y,0)/2;"
   "return(v.x<x?"
     "abs(v.y):"
     "length(v-vec2(x,0)))-y.y;"
 "}"
 "vec3 e(vec2 v,vec3 y,vec3 x,float a,float f)"
 "{"
   "vec2 m=abs(v),r=v,s=v,t=sign(s),w=v;"
   "if(m.x>.5+d.y+.1||m.y>1+d.y+.1)"
     "return vec3(0);"
   "r.y-=1;"
   "float n=round(r.y);"
   "r.y-=n;"
   "s=abs(s);"
   "s=s.yx;"
   "s-=.5;"
   "w.y=abs(v.y);"
   "w.y-=.5;"
   "w=abs(w);"
   "float z=e(r,d),p=e(s,d),l=dot(normalize(vec2(1,-1)),w);"
   "return((i[int(floor(f))]&1<<int(l>0?"
     "(t.x+1)/2+t.y+1+3:"
     "-n))==0?"
     "x:"
     "y)*smoothstep(a,-a,min(z,p));"
 "}"
 "vec3 h(vec2 v,float y)"
 "{"
   "vec3 f=vec3(0),s=vec3(0,0,y),x=normalize(vec3(v,2)),m=abs(x);"
   "float d=sign(x.x);"
   "for(int i=1;i<10;++i)"
     "{"
       "float a=(-s.x+6*sqrt(i))/m.x;"
       "vec3 n=s+x*a;"
       "vec2 w=n.yz*.02,r=round(w),l=w-r;"
       "if(fract(sin(dot((r+i+.5*sign(x.x)).xy,vec2(12.9898,58.233)))*13758.5453)<.5)"
         "l=vec2(l.y,-l.x);"
       "float p=smoothstep(-.7,1.,sin(.1*n.z+y+i+d)),z=length(l+.5)-.5,C=length(l-.5)-.5;"
       "f+=t(.05*a+y)*exp(-.003*a*a)*.0025/max(abs(abs(min(z,C))-.025),.003*p)*p;"
     "}"
   "return f;"
 "}"
 "void main()"
 "{"
   "vec2 m=s[0].yz,a=(-m+2*gl_FragCoord.xy)/m.yy,f=(-m+2*s[1].xy)/m.yy,i=a,l=a,d=a;"
   "float z=s[0].x,C=s[0].w,F=s[1].z,H=s[1].w,G=sqrt(2)/m.y,E=G/w,D=G/.05,B=G/(.25*w),g=sign(d.y);"
   "f.y=-f.y;"
   "vec3 c=h(a,z*.5),A=vec3(a,0),I=vec3(f,1),J=normalize(A-vec3(0,0,10)),K=normalize(I-A),L=normalize(vec3(2,3,3)),M=sqrt(t(z));"
   "l=l/w-.5;"
   "d.x-=-x*.75/2+a.y/5;"
   "d.y=abs(d.y)-.9;"
   "vec2 N=t(d,vec2(.75*x,x)),o=round(l);"
   "d.y*=g;"
   "l-=o;"
   "o+=6;"
   "d/=.05;"
   "float O=o.x+o.y*12+2,P=length(f-a);"
   "if(N.y==0&&abs(N.x-.5)<6)"
     "{"
       "vec3 Q=t(2.5+1.5*g+.4*d.y+(N.x<1?"
         "0:"
         "3));"
       "c+=e(d,Q,Q*.075,D,N.x>0?"
         "mod((g<0?"
           "H:"
           "F)*pow(10,N.x-6),10):"
         "r[int(N.x+5+3*(1-g))]);"
     "}"
   "if(max(abs(i).x,abs(i).y)<.825)"
     "{"
       "vec4 Q=s[int(O)];"
       "float R=Q.z,S=Q.w,u=p(l),T=smoothstep(S+1./2,S+1./8,C),U=smoothstep(R,R+y,C),V=exp(-2*fract(C-P*P/8));"
       "vec3 W=p(l,.45-1./80-T/40),X=tanh(8*c)/8;"
       "float Y=1+dot(W,J),Z=pow(max(dot(L,reflect(J,W)),0),22),_=pow(max(dot(K,reflect(J,W)),0),44);"
       "for(int b=0;b<2;++b)"
         "{"
           "float j=b==0?"
             "Q.y:"
             "Q.x,k=b==0?"
             "1-U:"
             "U;"
           "vec2 q=n[int(j)];"
           "float ay=abs(length(l)-.1*max(T,V));"
           "for(float at=0;at<q.y;++at)"
             "ay=min(abs(ay-.1),ay);"
           "vec3 at=(.2+t(2-j))*(q.x*.005/max(ay,.003));"
           "if(j<1)"
             "{"
               "vec2 ax=l/.25;"
               "ax.x+=-ax.y/8;"
               "vec3 ab=t(j/2-ax.y/2),aa=ab/20;"
               "if(j<0)"
                 "X+=e(ax,ab,aa,B,-j);"
             "}"
           "else"
             " X=mix(X,at,k*smoothstep(E,-E,u));"
           "X+=k*(Z/4+_*M)*Y*16*step(1,j);"
         "}"
       "c=mix(c,X,smoothstep(E,-E,u));"
       "u=abs(u)-1./80;"
       "c=mix(c,mix(t(3.+a.y)/4,vec3(1),T),smoothstep(E,-E,u));"
     "}"
   "v=vec4(sqrt(tanh(c)),1);"
 "}",

#endif
